
CREATE TABLE EMS_USUARI
(
  CODI          VARCHAR2(64)                    NOT NULL,
  INICIALITZAT  NUMBER(1),
  NIF           VARCHAR2(9)                     NOT NULL,
  NOM           VARCHAR2(200),
  EMAIL         VARCHAR2(200),
  VERSION       NUMBER(19)                      NOT NULL
);

CREATE TABLE EMS_SERVEI
(
  ID                   NUMBER(19)               NOT NULL,
  CREATEDDATE          TIMESTAMP(6),
  LASTMODIFIEDDATE     TIMESTAMP(6),
  ACTIU                NUMBER(1),
  CODI                 VARCHAR2(256)            NOT NULL,
  NOM                  VARCHAR2(256)            NOT NULL,
  DESCRIPCIO           VARCHAR2(1024),
  BACKOFFICE_CLASS     VARCHAR2(256)            NOT NULL,
  BACKCAIB_URL         VARCHAR2(256),
  BACKCAIB_AUTENTICAT  NUMBER(1),
  CONFIGURAT           NUMBER(1),
  VERSION              NUMBER(19)               NOT NULL,
  CREATEDBY_CODI       VARCHAR2(256),
  LASTMODIFIEDBY_CODI  VARCHAR2(256)
)


CREATE TABLE EMS_ACL_CLASS
(
  ID     NUMBER(19)                             NOT NULL,
  CLASS  VARCHAR2(100)                          NOT NULL
);


CREATE TABLE EMS_ACL_SID
(
  ID         NUMBER(19)                         NOT NULL,
  PRINCIPAL  NUMBER(1)                          NOT NULL,
  SID        VARCHAR2(100)                      NOT NULL
);


CREATE TABLE EMS_ACL_ENTRY
(
  ID                   NUMBER(19)               NOT NULL,
  ACL_OBJECT_IDENTITY  NUMBER(19)               NOT NULL,
  ACE_ORDER            NUMBER(19)               NOT NULL,
  SID                  NUMBER(19)               NOT NULL,
  MASK                 NUMBER(19)               NOT NULL,
  GRANTING             NUMBER(1)                NOT NULL,
  AUDIT_SUCCESS        NUMBER(1)                NOT NULL,
  AUDIT_FAILURE        NUMBER(1)                NOT NULL
);


CREATE TABLE EMS_ACL_OBJECT_IDENTITY
(
  ID                  NUMBER(19)                NOT NULL,
  OBJECT_ID_CLASS     NUMBER(19)                NOT NULL,
  OBJECT_ID_IDENTITY  NUMBER(19)                NOT NULL,
  PARENT_OBJECT       NUMBER(19),
  OWNER_SID           NUMBER(19)                NOT NULL,
  ENTRIES_INHERITING  NUMBER(1)                 NOT NULL
);




ALTER TABLE EMS_SERVEI ADD (
  PRIMARY KEY (ID),
  UNIQUE (CODI));

ALTER TABLE EMS_USUARI ADD (
  PRIMARY KEY (CODI),
  UNIQUE (NIF));

ALTER TABLE EMS_SERVEI ADD (
  CONSTRAINT EMS_USUCRE_SERVEI_FK FOREIGN KEY (CREATEDBY_CODI) 
    REFERENCES EMS_USUARI (CODI),
  CONSTRAINT EMS_USUMOD_SERVEI_FK FOREIGN KEY (LASTMODIFIEDBY_CODI) 
    REFERENCES EMS_USUARI (CODI));

ALTER TABLE EMS_ACL_CLASS ADD (
  CONSTRAINT EMS_ACL_CLASS_PK PRIMARY KEY (ID),
  CONSTRAINT EMS_ACL_CLASS_CLASS_UK UNIQUE (CLASS));

ALTER TABLE EMS_ACL_ENTRY ADD (
  CONSTRAINT EMS_ACL_ENTRY_PK PRIMARY KEY (ID),
  CONSTRAINT EMS_ACL_ENTRY_IDENT_ORDER_UK UNIQUE (ACL_OBJECT_IDENTITY, ACE_ORDER));

ALTER TABLE EMS_ACL_OBJECT_IDENTITY ADD (
  CONSTRAINT EMS_ACL_OID_PK PRIMARY KEY (ID),
  CONSTRAINT EMS_ACL_IOD_CLASS_IDENTITY_UK UNIQUE (OBJECT_ID_CLASS, OBJECT_ID_IDENTITY));

ALTER TABLE EMS_ACL_SID ADD (
  CONSTRAINT EMS_ACL_SID_PK PRIMARY KEY (ID),
  CONSTRAINT EMS_ACL_SID_PRINCIPAL_SID_UK UNIQUE (SID, PRINCIPAL));


ALTER TABLE EMS_ACL_ENTRY ADD CONSTRAINT EMS_ACL_ENTRY_GRANTING_CK
  CHECK (GRANTING in (1,0));

ALTER TABLE EMS_ACL_ENTRY ADD CONSTRAINT EMS_ACL_ENTRY_AUDIT_SUCCESS_CK
  CHECK (AUDIT_SUCCESS in (1,0));

ALTER TABLE EMS_ACL_ENTRY ADD CONSTRAINT EMS_ACL_ENTRY_AUDIT_FAILURE_CK
  CHECK (AUDIT_FAILURE in (1,0));

ALTER TABLE EMS_ACL_OBJECT_IDENTITY ADD CONSTRAINT EMS_ACL_OID_ENTRIES_CK
  CHECK (ENTRIES_INHERITING in (1,0));

ALTER TABLE EMS_ACL_SID ADD CONSTRAINT EMS_ACL_SID_PRINCIPAL_CK
  CHECK (PRINCIPAL in (1,0));


ALTER TABLE EMS_ACL_ENTRY ADD CONSTRAINT EMS_ACL_OID_ENTRY_FK
  FOREIGN KEY (ACL_OBJECT_IDENTITY)
  REFERENCES EMS_ACL_OBJECT_IDENTITY (ID);

ALTER TABLE EMS_ACL_ENTRY ADD CONSTRAINT EMS_ACL_SID_ENTRY_FK
  FOREIGN KEY (SID)
  REFERENCES EMS_ACL_SID (ID);

ALTER TABLE EMS_ACL_OBJECT_IDENTITY ADD CONSTRAINT EMS_ACL_CLASS_OID_FK
  FOREIGN KEY (OBJECT_ID_CLASS)
  REFERENCES EMS_ACL_CLASS (ID);

ALTER TABLE EMS_ACL_OBJECT_IDENTITY ADD CONSTRAINT EMS_ACL_PARENT_OID_FK
  FOREIGN KEY (PARENT_OBJECT)
  REFERENCES EMS_ACL_OBJECT_IDENTITY (ID);

ALTER TABLE EMS_ACL_OBJECT_IDENTITY ADD CONSTRAINT EMS_ACL_SID_OID_FK
  FOREIGN KEY (OWNER_SID)
  REFERENCES EMS_ACL_SID (ID);




CREATE SEQUENCE HIBERNATE_SEQUENCE;

CREATE SEQUENCE EMS_ACL_CLASS_SEQ;
CREATE SEQUENCE EMS_ACL_ENTRY_SEQ;
CREATE SEQUENCE EMS_ACL_OBJECT_IDENTITY_SEQ;
CREATE SEQUENCE EMS_ACL_SID_SEQ;




CREATE OR REPLACE TRIGGER EMS_ACLCLA_IDGEN
BEFORE INSERT ON EMS_ACL_CLASS
FOR EACH ROW
  BEGIN
    SELECT EMS_ACL_CLASS_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/
SHOW ERRORS;
 
CREATE OR REPLACE TRIGGER EMS_ACLENT_IDGEN
BEFORE INSERT ON EMS_ACL_ENTRY
FOR EACH ROW
  BEGIN
    SELECT EMS_ACL_ENTRY_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/
SHOW ERRORS;
 
CREATE OR REPLACE TRIGGER EMS_ACLOID_IDGEN
BEFORE INSERT ON EMS_ACL_OBJECT_IDENTITY
FOR EACH ROW
  BEGIN
    SELECT EMS_ACL_OBJECT_IDENTITY_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/
SHOW ERRORS;
 
CREATE OR REPLACE TRIGGER EMS_ACLSID_IDGEN
BEFORE INSERT ON EMS_ACL_SID
FOR EACH ROW
  BEGIN
    SELECT EMS_ACL_SID_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/
SHOW ERRORS;



GRANT SELECT, UPDATE, INSERT, DELETE ON EMS_USUARI TO WWW_EMISERV;
GRANT SELECT, UPDATE, INSERT, DELETE ON EMS_SERVEI TO WWW_EMISERV;
GRANT SELECT, UPDATE, INSERT, DELETE ON EMS_ACL_CLASS TO WWW_EMISERV;
GRANT SELECT, UPDATE, INSERT, DELETE ON EMS_ACL_ENTRY TO WWW_EMISERV;
GRANT SELECT, UPDATE, INSERT, DELETE ON EMS_ACL_OBJECT_IDENTITY TO WWW_EMISERV;
GRANT SELECT, UPDATE, INSERT, DELETE ON EMS_ACL_SID TO WWW_EMISERV;

GRANT SELECT ON EMS_ACL_SID_SEQ TO WWW_EMISERV;
GRANT SELECT ON EMS_ACL_CLASS_SEQ TO WWW_EMISERV;
GRANT SELECT ON EMS_ACL_OBJECT_IDENTITY_SEQ TO WWW_EMISERV;
GRANT SELECT ON EMS_ACL_ENTRY_SEQ TO WWW_EMISERV;

GRANT SELECT ON HIBERNATE_SEQUENCE TO WWW_EMISERV;
